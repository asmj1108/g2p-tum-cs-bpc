#!/bin/bash

set -euo pipefail

usage() {
	cat <<EOF
Usage: $0 CHECKPOINT_DIR [clean]

Arguments:
    CHECKPOINT_DIR    Directory containing checkpoint files and results
    clean            Optional: Remove checkpoints that don't have the lowest WER

Examples:
    $0 checkpoints/pus-512-.3-l-s
    $0 checkpoints/pus-512-.3-l-s clean
EOF
}

# Validate arguments
if [[ $# -lt 1 || $# -gt 2 ]]; then
	echo "Error: Invalid number of arguments" >&2
	usage >&2
	exit 1
fi

if [[ "$1" == "--help" || "$1" == "-h" ]]; then
	usage
	exit 0
fi

clean_worse_cps() {

	local -r DIR=$(dirname "$1")
	local exclude_pattern=""

	# Build exclusion patterns
	for file in "$@"; do
		local checkpoint_prefix
		checkpoint_prefix=$(basename "$file" | grep -oE '^checkpoint[0-9]+')
		if [ -n "$checkpoint_prefix" ]; then
			if [ -z "$exclude_pattern" ]; then
				exclude_pattern="${checkpoint_prefix}[^0-9]"
			else
				exclude_pattern="${exclude_pattern}|${checkpoint_prefix}[^0-9]"
			fi
		fi
	done

	find "$DIR" -type f | grep -vE "(${exclude_pattern})" | xargs -r rm

}

readonly CP="$1"
readonly CLEAN_MODE="${2:-}"

TO_KEEP=()

for LEVEL in "dev" "test"; do
	MIN_WER=100
	MIN_CHECKPOINT=""
	shopt -s nullglob
	for RESULT_FILE in "${CP}/checkpoint"*"-${LEVEL}.res"; do
		WER=$(grep "WER:" "${RESULT_FILE}" | awk '{print $2}')

		if awk "BEGIN {exit !($WER < $MIN_WER)}"; then
			MIN_WER="${WER}"
			MIN_CHECKPOINT="${RESULT_FILE}"
		fi
	done
	shopt -u nullglob
	if [ -n "${MIN_CHECKPOINT}" ]; then
		TO_KEEP+=("${MIN_CHECKPOINT}")
		if [ "${LEVEL}" == "dev" ]; then
			echo "${MIN_CHECKPOINT} is the best checkpoint (WER: ${MIN_WER} on dev set)."
			echo "${MIN_CHECKPOINT} scored $(head -n1 "${MIN_CHECKPOINT/dev/test}" | cut -f2) on test set."
		else
			echo "${MIN_CHECKPOINT} is the highest-scoring checkpoint on test set (WER: ${MIN_WER})."$'\n'
		fi
	fi
done
if [ "${CLEAN_MODE}" == "clean" ]; then
	clean_worse_cps "${TO_KEEP[@]}"
fi
