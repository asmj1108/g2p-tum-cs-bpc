#!/bin/bash

set -euo pipefail

# Fairseq expects six files:
# Two train, two dev, two test, each distinguished by prefixes.
# One file is the source and one is the target, distinguished by suffixes.
readonly DATA=../../data
readonly LANGS=('ady' 'ara' 'arm_e' 'asm' 'bel' 'ben' 'bul' 'bur' 'ceb' 'dut' 'eng_us' 'fas' 'fre' 'geo' 'ger' 'gle'
	'gre' 'hbs_latn' 'hin' 'hun' 'ice' 'ind' 'ita' 'jpn_hira' 'khm' 'kor' 'lav' 'lit' 'lwl' 'mkd' 'mlt_latn' 'nno' 'per'
	'pus' 'rum' 'rus' 'shn' 'slv' 'spa' 'swe' 'tgl' 'tha' 'ukr' 'urd' 'vie_hanoi' 'wel' 'wel_sw')

tsv() {
	for LANG in "${LANGS[@]}"; do
		for TASK in train dev test; do
			TSV="${DATA}/${LANG}/${LANG}_${TASK}.tsv"
			# Separates graphemes with spaces
			# Using python to avoid `sed` because `sed` operates on byte-level and messes up utf-8 encoding
			cut -f1 "${TSV}" |
				python -c "
import sys
for line in sys.stdin:
    print(' '.join(line.strip()))
            " >"${TASK}.${LANG}.graphemes"
			# Phonemes are already separated intelligently in WikiPron.
			cut -f2 "${TSV}" \
				>"${TASK}.${LANG}.phonemes"
		done
	done
}

bin() {
	for LANG in "${LANGS[@]}"; do
		fairseq-preprocess \
			--source-lang="${LANG}.graphemes" \
			--target-lang="${LANG}.phonemes" \
			--trainpref=train \
			--validpref=dev \
			--testpref=test \
			--tokenizer=space \
			--thresholdsrc=5 \
			--thresholdtgt=5 \
			--destdir="data-bin/${LANG}"
	done
}

main() {
	tsv
	bin
	rm -f -- *.{graph,phon}emes
}

main
